kind: Environment
name: dev
config:
  public_dns: "example.com"
  services:
    ghost:
      environment:
        - name: url
          value: "http://{service.name}.{public_dns}"
        - name: database__client
          value: "{db_remote.service.name}"
        - name: database__connection__host
          value: "{db_remote.service.service_addr}"
        - name: database__connection__port
          value: "{db_remote.ports[0].port}"
        - name: database__connection__user
          value: "{db_remote.provided.admin_user}"
        - name: database__connection__password
          value: "{db_remote.provided_secrets.admin_password}"
        - name: database__connection__database
          value: "{service.name}"
    mysql:
      config:
        - endpoint: "db"
          data:
            admin_password: "testing"
      environment:
        - name: MYSQL_ROOT_PASSWORD
          value: "{db_local.provided_secrets.admin_password}"
  storage:
    # allocate persistent volumes to the environment
    # tag them with storageclass, env name
    # and other things used in volume claims matching (see mysql)
    - kind: ebs # | efs # default ebs -- efs supports writemany
      name: stable # this is the storageClass but the key into volume names in component.storage[]
      storage: 100Gi
      accessMode: readWriteOnce # default
